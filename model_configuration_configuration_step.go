/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfigurationConfigurationStep struct for ConfigurationConfigurationStep
type ConfigurationConfigurationStep struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	Label *LocalisationLocalizedText `json:"label,omitempty"`
	Option *ConfigurationStepOption `json:"option,omitempty"`
}

// NewConfigurationConfigurationStep instantiates a new ConfigurationConfigurationStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationConfigurationStep() *ConfigurationConfigurationStep {
	this := ConfigurationConfigurationStep{}
	return &this
}

// NewConfigurationConfigurationStepWithDefaults instantiates a new ConfigurationConfigurationStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationConfigurationStepWithDefaults() *ConfigurationConfigurationStep {
	this := ConfigurationConfigurationStep{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConfigurationConfigurationStep) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationConfigurationStep) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConfigurationConfigurationStep) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConfigurationConfigurationStep) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *ConfigurationConfigurationStep) GetGrn() string {
	if o == nil || isNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationConfigurationStep) GetGrnOk() (*string, bool) {
	if o == nil || isNil(o.Grn) {
    return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *ConfigurationConfigurationStep) HasGrn() bool {
	if o != nil && !isNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *ConfigurationConfigurationStep) SetGrn(v string) {
	o.Grn = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ConfigurationConfigurationStep) GetLabel() LocalisationLocalizedText {
	if o == nil || isNil(o.Label) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationConfigurationStep) GetLabelOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ConfigurationConfigurationStep) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given LocalisationLocalizedText and assigns it to the Label field.
func (o *ConfigurationConfigurationStep) SetLabel(v LocalisationLocalizedText) {
	o.Label = &v
}

// GetOption returns the Option field value if set, zero value otherwise.
func (o *ConfigurationConfigurationStep) GetOption() ConfigurationStepOption {
	if o == nil || isNil(o.Option) {
		var ret ConfigurationStepOption
		return ret
	}
	return *o.Option
}

// GetOptionOk returns a tuple with the Option field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationConfigurationStep) GetOptionOk() (*ConfigurationStepOption, bool) {
	if o == nil || isNil(o.Option) {
    return nil, false
	}
	return o.Option, true
}

// HasOption returns a boolean if a field has been set.
func (o *ConfigurationConfigurationStep) HasOption() bool {
	if o != nil && !isNil(o.Option) {
		return true
	}

	return false
}

// SetOption gets a reference to the given ConfigurationStepOption and assigns it to the Option field.
func (o *ConfigurationConfigurationStep) SetOption(v ConfigurationStepOption) {
	o.Option = &v
}

func (o ConfigurationConfigurationStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Option) {
		toSerialize["option"] = o.Option
	}
	return json.Marshal(toSerialize)
}

type NullableConfigurationConfigurationStep struct {
	value *ConfigurationConfigurationStep
	isSet bool
}

func (v NullableConfigurationConfigurationStep) Get() *ConfigurationConfigurationStep {
	return v.value
}

func (v *NullableConfigurationConfigurationStep) Set(val *ConfigurationConfigurationStep) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationConfigurationStep) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationConfigurationStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationConfigurationStep(val *ConfigurationConfigurationStep) *NullableConfigurationConfigurationStep {
	return &NullableConfigurationConfigurationStep{value: val, isSet: true}
}

func (v NullableConfigurationConfigurationStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationConfigurationStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


