/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfigurationGetAvailableConfigurationRequest struct for ConfigurationGetAvailableConfigurationRequest
type ConfigurationGetAvailableConfigurationRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	ProductId *string `json:"productId,omitempty"`
	Selections []ConfigurationSelection `json:"selections,omitempty"`
	PropertyFilters []ConfigurationPropertyFilter `json:"propertyFilters,omitempty"`
	ConfiguratorId *string `json:"configuratorId,omitempty"`
}

// NewConfigurationGetAvailableConfigurationRequest instantiates a new ConfigurationGetAvailableConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationGetAvailableConfigurationRequest() *ConfigurationGetAvailableConfigurationRequest {
	this := ConfigurationGetAvailableConfigurationRequest{}
	return &this
}

// NewConfigurationGetAvailableConfigurationRequestWithDefaults instantiates a new ConfigurationGetAvailableConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationGetAvailableConfigurationRequestWithDefaults() *ConfigurationGetAvailableConfigurationRequest {
	this := ConfigurationGetAvailableConfigurationRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ConfigurationGetAvailableConfigurationRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ConfigurationGetAvailableConfigurationRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *ConfigurationGetAvailableConfigurationRequest) GetProductId() string {
	if o == nil || isNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) GetProductIdOk() (*string, bool) {
	if o == nil || isNil(o.ProductId) {
    return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) HasProductId() bool {
	if o != nil && !isNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *ConfigurationGetAvailableConfigurationRequest) SetProductId(v string) {
	o.ProductId = &v
}

// GetSelections returns the Selections field value if set, zero value otherwise.
func (o *ConfigurationGetAvailableConfigurationRequest) GetSelections() []ConfigurationSelection {
	if o == nil || isNil(o.Selections) {
		var ret []ConfigurationSelection
		return ret
	}
	return o.Selections
}

// GetSelectionsOk returns a tuple with the Selections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) GetSelectionsOk() ([]ConfigurationSelection, bool) {
	if o == nil || isNil(o.Selections) {
    return nil, false
	}
	return o.Selections, true
}

// HasSelections returns a boolean if a field has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) HasSelections() bool {
	if o != nil && !isNil(o.Selections) {
		return true
	}

	return false
}

// SetSelections gets a reference to the given []ConfigurationSelection and assigns it to the Selections field.
func (o *ConfigurationGetAvailableConfigurationRequest) SetSelections(v []ConfigurationSelection) {
	o.Selections = v
}

// GetPropertyFilters returns the PropertyFilters field value if set, zero value otherwise.
func (o *ConfigurationGetAvailableConfigurationRequest) GetPropertyFilters() []ConfigurationPropertyFilter {
	if o == nil || isNil(o.PropertyFilters) {
		var ret []ConfigurationPropertyFilter
		return ret
	}
	return o.PropertyFilters
}

// GetPropertyFiltersOk returns a tuple with the PropertyFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) GetPropertyFiltersOk() ([]ConfigurationPropertyFilter, bool) {
	if o == nil || isNil(o.PropertyFilters) {
    return nil, false
	}
	return o.PropertyFilters, true
}

// HasPropertyFilters returns a boolean if a field has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) HasPropertyFilters() bool {
	if o != nil && !isNil(o.PropertyFilters) {
		return true
	}

	return false
}

// SetPropertyFilters gets a reference to the given []ConfigurationPropertyFilter and assigns it to the PropertyFilters field.
func (o *ConfigurationGetAvailableConfigurationRequest) SetPropertyFilters(v []ConfigurationPropertyFilter) {
	o.PropertyFilters = v
}

// GetConfiguratorId returns the ConfiguratorId field value if set, zero value otherwise.
func (o *ConfigurationGetAvailableConfigurationRequest) GetConfiguratorId() string {
	if o == nil || isNil(o.ConfiguratorId) {
		var ret string
		return ret
	}
	return *o.ConfiguratorId
}

// GetConfiguratorIdOk returns a tuple with the ConfiguratorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) GetConfiguratorIdOk() (*string, bool) {
	if o == nil || isNil(o.ConfiguratorId) {
    return nil, false
	}
	return o.ConfiguratorId, true
}

// HasConfiguratorId returns a boolean if a field has been set.
func (o *ConfigurationGetAvailableConfigurationRequest) HasConfiguratorId() bool {
	if o != nil && !isNil(o.ConfiguratorId) {
		return true
	}

	return false
}

// SetConfiguratorId gets a reference to the given string and assigns it to the ConfiguratorId field.
func (o *ConfigurationGetAvailableConfigurationRequest) SetConfiguratorId(v string) {
	o.ConfiguratorId = &v
}

func (o ConfigurationGetAvailableConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !isNil(o.Selections) {
		toSerialize["selections"] = o.Selections
	}
	if !isNil(o.PropertyFilters) {
		toSerialize["propertyFilters"] = o.PropertyFilters
	}
	if !isNil(o.ConfiguratorId) {
		toSerialize["configuratorId"] = o.ConfiguratorId
	}
	return json.Marshal(toSerialize)
}

type NullableConfigurationGetAvailableConfigurationRequest struct {
	value *ConfigurationGetAvailableConfigurationRequest
	isSet bool
}

func (v NullableConfigurationGetAvailableConfigurationRequest) Get() *ConfigurationGetAvailableConfigurationRequest {
	return v.value
}

func (v *NullableConfigurationGetAvailableConfigurationRequest) Set(val *ConfigurationGetAvailableConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationGetAvailableConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationGetAvailableConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationGetAvailableConfigurationRequest(val *ConfigurationGetAvailableConfigurationRequest) *NullableConfigurationGetAvailableConfigurationRequest {
	return &NullableConfigurationGetAvailableConfigurationRequest{value: val, isSet: true}
}

func (v NullableConfigurationGetAvailableConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationGetAvailableConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


