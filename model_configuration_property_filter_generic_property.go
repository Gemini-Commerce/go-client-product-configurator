/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfigurationPropertyFilterGenericProperty struct for ConfigurationPropertyFilterGenericProperty
type ConfigurationPropertyFilterGenericProperty struct {
	PropertyKey *string `json:"propertyKey,omitempty"`
}

// NewConfigurationPropertyFilterGenericProperty instantiates a new ConfigurationPropertyFilterGenericProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationPropertyFilterGenericProperty() *ConfigurationPropertyFilterGenericProperty {
	this := ConfigurationPropertyFilterGenericProperty{}
	return &this
}

// NewConfigurationPropertyFilterGenericPropertyWithDefaults instantiates a new ConfigurationPropertyFilterGenericProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationPropertyFilterGenericPropertyWithDefaults() *ConfigurationPropertyFilterGenericProperty {
	this := ConfigurationPropertyFilterGenericProperty{}
	return &this
}

// GetPropertyKey returns the PropertyKey field value if set, zero value otherwise.
func (o *ConfigurationPropertyFilterGenericProperty) GetPropertyKey() string {
	if o == nil || isNil(o.PropertyKey) {
		var ret string
		return ret
	}
	return *o.PropertyKey
}

// GetPropertyKeyOk returns a tuple with the PropertyKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigurationPropertyFilterGenericProperty) GetPropertyKeyOk() (*string, bool) {
	if o == nil || isNil(o.PropertyKey) {
    return nil, false
	}
	return o.PropertyKey, true
}

// HasPropertyKey returns a boolean if a field has been set.
func (o *ConfigurationPropertyFilterGenericProperty) HasPropertyKey() bool {
	if o != nil && !isNil(o.PropertyKey) {
		return true
	}

	return false
}

// SetPropertyKey gets a reference to the given string and assigns it to the PropertyKey field.
func (o *ConfigurationPropertyFilterGenericProperty) SetPropertyKey(v string) {
	o.PropertyKey = &v
}

func (o ConfigurationPropertyFilterGenericProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PropertyKey) {
		toSerialize["propertyKey"] = o.PropertyKey
	}
	return json.Marshal(toSerialize)
}

type NullableConfigurationPropertyFilterGenericProperty struct {
	value *ConfigurationPropertyFilterGenericProperty
	isSet bool
}

func (v NullableConfigurationPropertyFilterGenericProperty) Get() *ConfigurationPropertyFilterGenericProperty {
	return v.value
}

func (v *NullableConfigurationPropertyFilterGenericProperty) Set(val *ConfigurationPropertyFilterGenericProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationPropertyFilterGenericProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationPropertyFilterGenericProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationPropertyFilterGenericProperty(val *ConfigurationPropertyFilterGenericProperty) *NullableConfigurationPropertyFilterGenericProperty {
	return &NullableConfigurationPropertyFilterGenericProperty{value: val, isSet: true}
}

func (v NullableConfigurationPropertyFilterGenericProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationPropertyFilterGenericProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


