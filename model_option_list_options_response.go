/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_configurator

import (
	"encoding/json"
)

// OptionListOptionsResponse struct for OptionListOptionsResponse
type OptionListOptionsResponse struct {
	Options []ProductconfiguratoroptionEntity `json:"options,omitempty"`
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

// NewOptionListOptionsResponse instantiates a new OptionListOptionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionListOptionsResponse() *OptionListOptionsResponse {
	this := OptionListOptionsResponse{}
	return &this
}

// NewOptionListOptionsResponseWithDefaults instantiates a new OptionListOptionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionListOptionsResponseWithDefaults() *OptionListOptionsResponse {
	this := OptionListOptionsResponse{}
	return &this
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *OptionListOptionsResponse) GetOptions() []ProductconfiguratoroptionEntity {
	if o == nil || isNil(o.Options) {
		var ret []ProductconfiguratoroptionEntity
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionListOptionsResponse) GetOptionsOk() ([]ProductconfiguratoroptionEntity, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *OptionListOptionsResponse) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductconfiguratoroptionEntity and assigns it to the Options field.
func (o *OptionListOptionsResponse) SetOptions(v []ProductconfiguratoroptionEntity) {
	o.Options = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *OptionListOptionsResponse) GetNextPageToken() string {
	if o == nil || isNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionListOptionsResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || isNil(o.NextPageToken) {
    return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *OptionListOptionsResponse) HasNextPageToken() bool {
	if o != nil && !isNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *OptionListOptionsResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o OptionListOptionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !isNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

type NullableOptionListOptionsResponse struct {
	value *OptionListOptionsResponse
	isSet bool
}

func (v NullableOptionListOptionsResponse) Get() *OptionListOptionsResponse {
	return v.value
}

func (v *NullableOptionListOptionsResponse) Set(val *OptionListOptionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionListOptionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionListOptionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionListOptionsResponse(val *OptionListOptionsResponse) *NullableOptionListOptionsResponse {
	return &NullableOptionListOptionsResponse{value: val, isSet: true}
}

func (v NullableOptionListOptionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionListOptionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


