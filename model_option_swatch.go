/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_configurator

import (
	"encoding/json"
)

// OptionSwatch struct for OptionSwatch
type OptionSwatch struct {
	Grn *string `json:"grn,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewOptionSwatch instantiates a new OptionSwatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionSwatch() *OptionSwatch {
	this := OptionSwatch{}
	return &this
}

// NewOptionSwatchWithDefaults instantiates a new OptionSwatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionSwatchWithDefaults() *OptionSwatch {
	this := OptionSwatch{}
	return &this
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *OptionSwatch) GetGrn() string {
	if o == nil || isNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionSwatch) GetGrnOk() (*string, bool) {
	if o == nil || isNil(o.Grn) {
    return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *OptionSwatch) HasGrn() bool {
	if o != nil && !isNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *OptionSwatch) SetGrn(v string) {
	o.Grn = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *OptionSwatch) GetUrl() string {
	if o == nil || isNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionSwatch) GetUrlOk() (*string, bool) {
	if o == nil || isNil(o.Url) {
    return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *OptionSwatch) HasUrl() bool {
	if o != nil && !isNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *OptionSwatch) SetUrl(v string) {
	o.Url = &v
}

func (o OptionSwatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !isNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableOptionSwatch struct {
	value *OptionSwatch
	isSet bool
}

func (v NullableOptionSwatch) Get() *OptionSwatch {
	return v.value
}

func (v *NullableOptionSwatch) Set(val *OptionSwatch) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionSwatch) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionSwatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionSwatch(val *OptionSwatch) *NullableOptionSwatch {
	return &NullableOptionSwatch{value: val, isSet: true}
}

func (v NullableOptionSwatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionSwatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


