/*
Product Configurator Service

## Introduction  This comprehensive guide will equip you with the knowledge to integrate and leverage our Product Configurator Service in your applications.  ## Quick Start  Get up and running in no time! Follow these steps to kickstart your integration:  1. **Authentication:** Obtain your integration JWT to authenticate your requests. 2. **Client Libraries:** Explore our GitHub repositories to grab client libraries in your preferred programming language. 3. **API Overview:** Familiarize yourself with our RESTful API using the OpenAPI specification.  ## Integration  ### API Overview  Our RESTful API is the gateway to unlocking the full potential of Product Configurator. Check out the detailed [API Reference](/docs/category/configurator) for a granular understanding of each endpoint and request/response format.  ### Client Libraries  To expedite your integration process, we provide client libraries for various programming languages. Find the one that suits your stack in our [GitHub repositories](https://github.com/Gemini-Commerce).  ### Authentication  Security is paramount. Learn how to authenticate your requests using JWT. This ensures a secure and reliable connection between your application and Product Configurator.  ## Configuration Management  ### Configurator Lifecycle  Understand the lifecycle of configurators, from draft to active and deleted. This flexibility allows you to manage configurations at your own pace.  ### Steps and Options  Configure product steps with ease and define options effortlessly. Explore the power of dependencies to create dynamic and intuitive configurations.  ### Matrices  Delve into matricesâ€”your secret weapon. Explore price and weight matrices, and learn how configured steps influence properties and pricing.  ### Price Management  Unleash dynamic pricing with our versatile price matrices. From fixed prices to incremental structures, adapt to diverse pricing models effortlessly.  ## Security  Your data is in safe hands. Discover how Product Configurator ensures security through JWT authentication, safeguarding your sensitive information.  ## Backward Compatibility  Stay ahead of the curve. Learn about our versioning strategy, providing backward compatibility while allowing our service to evolve seamlessly.  ## Developer Support  Have questions? Need assistance? Write to us at [info@gemini-commerce.com](mailto:info@gemini-commerce.com) and we will get back to you.

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_configurator

import (
	"encoding/json"
)

// checks if the ProductconfiguratormatrixUpdatePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductconfiguratormatrixUpdatePayload{}

// ProductconfiguratormatrixUpdatePayload struct for ProductconfiguratormatrixUpdatePayload
type ProductconfiguratormatrixUpdatePayload struct {
	Label *string `json:"label,omitempty"`
	// default_property_id is the id of the property that will be used as the starting point to calculate the differences between the properties.
	DefaultPropertyId *string `json:"defaultPropertyId,omitempty"`
	PropertiesMode *ProductconfiguratorPropertyMode `json:"propertiesMode,omitempty"`
	// steps are the same as in the create request. This is a full replacement.
	Steps []ProductconfiguratormatrixStep `json:"steps,omitempty"`
}

// NewProductconfiguratormatrixUpdatePayload instantiates a new ProductconfiguratormatrixUpdatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratormatrixUpdatePayload() *ProductconfiguratormatrixUpdatePayload {
	this := ProductconfiguratormatrixUpdatePayload{}
	var propertiesMode ProductconfiguratorPropertyMode = UNKNOWN
	this.PropertiesMode = &propertiesMode
	return &this
}

// NewProductconfiguratormatrixUpdatePayloadWithDefaults instantiates a new ProductconfiguratormatrixUpdatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratormatrixUpdatePayloadWithDefaults() *ProductconfiguratormatrixUpdatePayload {
	this := ProductconfiguratormatrixUpdatePayload{}
	var propertiesMode ProductconfiguratorPropertyMode = UNKNOWN
	this.PropertiesMode = &propertiesMode
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ProductconfiguratormatrixUpdatePayload) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratormatrixUpdatePayload) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ProductconfiguratormatrixUpdatePayload) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ProductconfiguratormatrixUpdatePayload) SetLabel(v string) {
	o.Label = &v
}

// GetDefaultPropertyId returns the DefaultPropertyId field value if set, zero value otherwise.
func (o *ProductconfiguratormatrixUpdatePayload) GetDefaultPropertyId() string {
	if o == nil || IsNil(o.DefaultPropertyId) {
		var ret string
		return ret
	}
	return *o.DefaultPropertyId
}

// GetDefaultPropertyIdOk returns a tuple with the DefaultPropertyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratormatrixUpdatePayload) GetDefaultPropertyIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPropertyId) {
		return nil, false
	}
	return o.DefaultPropertyId, true
}

// HasDefaultPropertyId returns a boolean if a field has been set.
func (o *ProductconfiguratormatrixUpdatePayload) HasDefaultPropertyId() bool {
	if o != nil && !IsNil(o.DefaultPropertyId) {
		return true
	}

	return false
}

// SetDefaultPropertyId gets a reference to the given string and assigns it to the DefaultPropertyId field.
func (o *ProductconfiguratormatrixUpdatePayload) SetDefaultPropertyId(v string) {
	o.DefaultPropertyId = &v
}

// GetPropertiesMode returns the PropertiesMode field value if set, zero value otherwise.
func (o *ProductconfiguratormatrixUpdatePayload) GetPropertiesMode() ProductconfiguratorPropertyMode {
	if o == nil || IsNil(o.PropertiesMode) {
		var ret ProductconfiguratorPropertyMode
		return ret
	}
	return *o.PropertiesMode
}

// GetPropertiesModeOk returns a tuple with the PropertiesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratormatrixUpdatePayload) GetPropertiesModeOk() (*ProductconfiguratorPropertyMode, bool) {
	if o == nil || IsNil(o.PropertiesMode) {
		return nil, false
	}
	return o.PropertiesMode, true
}

// HasPropertiesMode returns a boolean if a field has been set.
func (o *ProductconfiguratormatrixUpdatePayload) HasPropertiesMode() bool {
	if o != nil && !IsNil(o.PropertiesMode) {
		return true
	}

	return false
}

// SetPropertiesMode gets a reference to the given ProductconfiguratorPropertyMode and assigns it to the PropertiesMode field.
func (o *ProductconfiguratormatrixUpdatePayload) SetPropertiesMode(v ProductconfiguratorPropertyMode) {
	o.PropertiesMode = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *ProductconfiguratormatrixUpdatePayload) GetSteps() []ProductconfiguratormatrixStep {
	if o == nil || IsNil(o.Steps) {
		var ret []ProductconfiguratormatrixStep
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratormatrixUpdatePayload) GetStepsOk() ([]ProductconfiguratormatrixStep, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *ProductconfiguratormatrixUpdatePayload) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []ProductconfiguratormatrixStep and assigns it to the Steps field.
func (o *ProductconfiguratormatrixUpdatePayload) SetSteps(v []ProductconfiguratormatrixStep) {
	o.Steps = v
}

func (o ProductconfiguratormatrixUpdatePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductconfiguratormatrixUpdatePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.DefaultPropertyId) {
		toSerialize["defaultPropertyId"] = o.DefaultPropertyId
	}
	if !IsNil(o.PropertiesMode) {
		toSerialize["propertiesMode"] = o.PropertiesMode
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	return toSerialize, nil
}

type NullableProductconfiguratormatrixUpdatePayload struct {
	value *ProductconfiguratormatrixUpdatePayload
	isSet bool
}

func (v NullableProductconfiguratormatrixUpdatePayload) Get() *ProductconfiguratormatrixUpdatePayload {
	return v.value
}

func (v *NullableProductconfiguratormatrixUpdatePayload) Set(val *ProductconfiguratormatrixUpdatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratormatrixUpdatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratormatrixUpdatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratormatrixUpdatePayload(val *ProductconfiguratormatrixUpdatePayload) *NullableProductconfiguratormatrixUpdatePayload {
	return &NullableProductconfiguratormatrixUpdatePayload{value: val, isSet: true}
}

func (v NullableProductconfiguratormatrixUpdatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratormatrixUpdatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


