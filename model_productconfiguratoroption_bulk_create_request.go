/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_configurator

import (
	"encoding/json"
)

// ProductconfiguratoroptionBulkCreateRequest struct for ProductconfiguratoroptionBulkCreateRequest
type ProductconfiguratoroptionBulkCreateRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	StepId *string `json:"stepId,omitempty"`
	Options []ProductconfiguratoroptionBulkCreateRequestCreateEntity `json:"options,omitempty"`
}

// NewProductconfiguratoroptionBulkCreateRequest instantiates a new ProductconfiguratoroptionBulkCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratoroptionBulkCreateRequest() *ProductconfiguratoroptionBulkCreateRequest {
	this := ProductconfiguratoroptionBulkCreateRequest{}
	return &this
}

// NewProductconfiguratoroptionBulkCreateRequestWithDefaults instantiates a new ProductconfiguratoroptionBulkCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratoroptionBulkCreateRequestWithDefaults() *ProductconfiguratoroptionBulkCreateRequest {
	this := ProductconfiguratoroptionBulkCreateRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ProductconfiguratoroptionBulkCreateRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetStepId returns the StepId field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetStepId() string {
	if o == nil || isNil(o.StepId) {
		var ret string
		return ret
	}
	return *o.StepId
}

// GetStepIdOk returns a tuple with the StepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetStepIdOk() (*string, bool) {
	if o == nil || isNil(o.StepId) {
    return nil, false
	}
	return o.StepId, true
}

// HasStepId returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) HasStepId() bool {
	if o != nil && !isNil(o.StepId) {
		return true
	}

	return false
}

// SetStepId gets a reference to the given string and assigns it to the StepId field.
func (o *ProductconfiguratoroptionBulkCreateRequest) SetStepId(v string) {
	o.StepId = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetOptions() []ProductconfiguratoroptionBulkCreateRequestCreateEntity {
	if o == nil || isNil(o.Options) {
		var ret []ProductconfiguratoroptionBulkCreateRequestCreateEntity
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) GetOptionsOk() ([]ProductconfiguratoroptionBulkCreateRequestCreateEntity, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionBulkCreateRequest) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductconfiguratoroptionBulkCreateRequestCreateEntity and assigns it to the Options field.
func (o *ProductconfiguratoroptionBulkCreateRequest) SetOptions(v []ProductconfiguratoroptionBulkCreateRequestCreateEntity) {
	o.Options = v
}

func (o ProductconfiguratoroptionBulkCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.StepId) {
		toSerialize["stepId"] = o.StepId
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratoroptionBulkCreateRequest struct {
	value *ProductconfiguratoroptionBulkCreateRequest
	isSet bool
}

func (v NullableProductconfiguratoroptionBulkCreateRequest) Get() *ProductconfiguratoroptionBulkCreateRequest {
	return v.value
}

func (v *NullableProductconfiguratoroptionBulkCreateRequest) Set(val *ProductconfiguratoroptionBulkCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratoroptionBulkCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratoroptionBulkCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratoroptionBulkCreateRequest(val *ProductconfiguratoroptionBulkCreateRequest) *NullableProductconfiguratoroptionBulkCreateRequest {
	return &NullableProductconfiguratoroptionBulkCreateRequest{value: val, isSet: true}
}

func (v NullableProductconfiguratoroptionBulkCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratoroptionBulkCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


