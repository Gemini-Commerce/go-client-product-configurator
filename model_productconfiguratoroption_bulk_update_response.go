/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductconfiguratoroptionBulkUpdateResponse struct for ProductconfiguratoroptionBulkUpdateResponse
type ProductconfiguratoroptionBulkUpdateResponse struct {
	Options []ProductconfiguratoroptionEntity `json:"options,omitempty"`
}

// NewProductconfiguratoroptionBulkUpdateResponse instantiates a new ProductconfiguratoroptionBulkUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratoroptionBulkUpdateResponse() *ProductconfiguratoroptionBulkUpdateResponse {
	this := ProductconfiguratoroptionBulkUpdateResponse{}
	return &this
}

// NewProductconfiguratoroptionBulkUpdateResponseWithDefaults instantiates a new ProductconfiguratoroptionBulkUpdateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratoroptionBulkUpdateResponseWithDefaults() *ProductconfiguratoroptionBulkUpdateResponse {
	this := ProductconfiguratoroptionBulkUpdateResponse{}
	return &this
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionBulkUpdateResponse) GetOptions() []ProductconfiguratoroptionEntity {
	if o == nil || isNil(o.Options) {
		var ret []ProductconfiguratoroptionEntity
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionBulkUpdateResponse) GetOptionsOk() ([]ProductconfiguratoroptionEntity, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionBulkUpdateResponse) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductconfiguratoroptionEntity and assigns it to the Options field.
func (o *ProductconfiguratoroptionBulkUpdateResponse) SetOptions(v []ProductconfiguratoroptionEntity) {
	o.Options = v
}

func (o ProductconfiguratoroptionBulkUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratoroptionBulkUpdateResponse struct {
	value *ProductconfiguratoroptionBulkUpdateResponse
	isSet bool
}

func (v NullableProductconfiguratoroptionBulkUpdateResponse) Get() *ProductconfiguratoroptionBulkUpdateResponse {
	return v.value
}

func (v *NullableProductconfiguratoroptionBulkUpdateResponse) Set(val *ProductconfiguratoroptionBulkUpdateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratoroptionBulkUpdateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratoroptionBulkUpdateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratoroptionBulkUpdateResponse(val *ProductconfiguratoroptionBulkUpdateResponse) *NullableProductconfiguratoroptionBulkUpdateResponse {
	return &NullableProductconfiguratoroptionBulkUpdateResponse{value: val, isSet: true}
}

func (v NullableProductconfiguratoroptionBulkUpdateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratoroptionBulkUpdateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


