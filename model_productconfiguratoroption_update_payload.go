/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductconfiguratoroptionUpdatePayload struct for ProductconfiguratoroptionUpdatePayload
type ProductconfiguratoroptionUpdatePayload struct {
	Label *LocalisationLocalizedText `json:"label,omitempty"`
	Position *string `json:"position,omitempty"`
	ExternalReferenceId *string `json:"externalReferenceId,omitempty"`
	Swatch *OptionSwatch `json:"swatch,omitempty"`
}

// NewProductconfiguratoroptionUpdatePayload instantiates a new ProductconfiguratoroptionUpdatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratoroptionUpdatePayload() *ProductconfiguratoroptionUpdatePayload {
	this := ProductconfiguratoroptionUpdatePayload{}
	return &this
}

// NewProductconfiguratoroptionUpdatePayloadWithDefaults instantiates a new ProductconfiguratoroptionUpdatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratoroptionUpdatePayloadWithDefaults() *ProductconfiguratoroptionUpdatePayload {
	this := ProductconfiguratoroptionUpdatePayload{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionUpdatePayload) GetLabel() LocalisationLocalizedText {
	if o == nil || isNil(o.Label) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionUpdatePayload) GetLabelOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionUpdatePayload) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given LocalisationLocalizedText and assigns it to the Label field.
func (o *ProductconfiguratoroptionUpdatePayload) SetLabel(v LocalisationLocalizedText) {
	o.Label = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionUpdatePayload) GetPosition() string {
	if o == nil || isNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionUpdatePayload) GetPositionOk() (*string, bool) {
	if o == nil || isNil(o.Position) {
    return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionUpdatePayload) HasPosition() bool {
	if o != nil && !isNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *ProductconfiguratoroptionUpdatePayload) SetPosition(v string) {
	o.Position = &v
}

// GetExternalReferenceId returns the ExternalReferenceId field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionUpdatePayload) GetExternalReferenceId() string {
	if o == nil || isNil(o.ExternalReferenceId) {
		var ret string
		return ret
	}
	return *o.ExternalReferenceId
}

// GetExternalReferenceIdOk returns a tuple with the ExternalReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionUpdatePayload) GetExternalReferenceIdOk() (*string, bool) {
	if o == nil || isNil(o.ExternalReferenceId) {
    return nil, false
	}
	return o.ExternalReferenceId, true
}

// HasExternalReferenceId returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionUpdatePayload) HasExternalReferenceId() bool {
	if o != nil && !isNil(o.ExternalReferenceId) {
		return true
	}

	return false
}

// SetExternalReferenceId gets a reference to the given string and assigns it to the ExternalReferenceId field.
func (o *ProductconfiguratoroptionUpdatePayload) SetExternalReferenceId(v string) {
	o.ExternalReferenceId = &v
}

// GetSwatch returns the Swatch field value if set, zero value otherwise.
func (o *ProductconfiguratoroptionUpdatePayload) GetSwatch() OptionSwatch {
	if o == nil || isNil(o.Swatch) {
		var ret OptionSwatch
		return ret
	}
	return *o.Swatch
}

// GetSwatchOk returns a tuple with the Swatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratoroptionUpdatePayload) GetSwatchOk() (*OptionSwatch, bool) {
	if o == nil || isNil(o.Swatch) {
    return nil, false
	}
	return o.Swatch, true
}

// HasSwatch returns a boolean if a field has been set.
func (o *ProductconfiguratoroptionUpdatePayload) HasSwatch() bool {
	if o != nil && !isNil(o.Swatch) {
		return true
	}

	return false
}

// SetSwatch gets a reference to the given OptionSwatch and assigns it to the Swatch field.
func (o *ProductconfiguratoroptionUpdatePayload) SetSwatch(v OptionSwatch) {
	o.Swatch = &v
}

func (o ProductconfiguratoroptionUpdatePayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !isNil(o.ExternalReferenceId) {
		toSerialize["externalReferenceId"] = o.ExternalReferenceId
	}
	if !isNil(o.Swatch) {
		toSerialize["swatch"] = o.Swatch
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratoroptionUpdatePayload struct {
	value *ProductconfiguratoroptionUpdatePayload
	isSet bool
}

func (v NullableProductconfiguratoroptionUpdatePayload) Get() *ProductconfiguratoroptionUpdatePayload {
	return v.value
}

func (v *NullableProductconfiguratoroptionUpdatePayload) Set(val *ProductconfiguratoroptionUpdatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratoroptionUpdatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratoroptionUpdatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratoroptionUpdatePayload(val *ProductconfiguratoroptionUpdatePayload) *NullableProductconfiguratoroptionUpdatePayload {
	return &NullableProductconfiguratoroptionUpdatePayload{value: val, isSet: true}
}

func (v NullableProductconfiguratoroptionUpdatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratoroptionUpdatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


