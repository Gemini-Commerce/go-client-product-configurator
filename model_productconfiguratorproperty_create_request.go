/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductconfiguratorpropertyCreateRequest struct for ProductconfiguratorpropertyCreateRequest
type ProductconfiguratorpropertyCreateRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	MatrixId *string `json:"matrixId,omitempty"`
	StepIdToOptionId *map[string]string `json:"stepIdToOptionId,omitempty"`
	GenericProperty *ProductconfiguratorpropertyGenericProperty `json:"genericProperty,omitempty"`
	PriceProperty *ProductconfiguratorpropertyPriceProperty `json:"priceProperty,omitempty"`
	WeightProperty *ProductconfiguratorpropertyWeightProperty `json:"weightProperty,omitempty"`
}

// NewProductconfiguratorpropertyCreateRequest instantiates a new ProductconfiguratorpropertyCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratorpropertyCreateRequest() *ProductconfiguratorpropertyCreateRequest {
	this := ProductconfiguratorpropertyCreateRequest{}
	return &this
}

// NewProductconfiguratorpropertyCreateRequestWithDefaults instantiates a new ProductconfiguratorpropertyCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratorpropertyCreateRequestWithDefaults() *ProductconfiguratorpropertyCreateRequest {
	this := ProductconfiguratorpropertyCreateRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetTenantId() string {
	if o == nil || isNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || isNil(o.TenantId) {
    return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasTenantId() bool {
	if o != nil && !isNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *ProductconfiguratorpropertyCreateRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetMatrixId returns the MatrixId field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetMatrixId() string {
	if o == nil || isNil(o.MatrixId) {
		var ret string
		return ret
	}
	return *o.MatrixId
}

// GetMatrixIdOk returns a tuple with the MatrixId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetMatrixIdOk() (*string, bool) {
	if o == nil || isNil(o.MatrixId) {
    return nil, false
	}
	return o.MatrixId, true
}

// HasMatrixId returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasMatrixId() bool {
	if o != nil && !isNil(o.MatrixId) {
		return true
	}

	return false
}

// SetMatrixId gets a reference to the given string and assigns it to the MatrixId field.
func (o *ProductconfiguratorpropertyCreateRequest) SetMatrixId(v string) {
	o.MatrixId = &v
}

// GetStepIdToOptionId returns the StepIdToOptionId field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetStepIdToOptionId() map[string]string {
	if o == nil || isNil(o.StepIdToOptionId) {
		var ret map[string]string
		return ret
	}
	return *o.StepIdToOptionId
}

// GetStepIdToOptionIdOk returns a tuple with the StepIdToOptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetStepIdToOptionIdOk() (*map[string]string, bool) {
	if o == nil || isNil(o.StepIdToOptionId) {
    return nil, false
	}
	return o.StepIdToOptionId, true
}

// HasStepIdToOptionId returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasStepIdToOptionId() bool {
	if o != nil && !isNil(o.StepIdToOptionId) {
		return true
	}

	return false
}

// SetStepIdToOptionId gets a reference to the given map[string]string and assigns it to the StepIdToOptionId field.
func (o *ProductconfiguratorpropertyCreateRequest) SetStepIdToOptionId(v map[string]string) {
	o.StepIdToOptionId = &v
}

// GetGenericProperty returns the GenericProperty field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetGenericProperty() ProductconfiguratorpropertyGenericProperty {
	if o == nil || isNil(o.GenericProperty) {
		var ret ProductconfiguratorpropertyGenericProperty
		return ret
	}
	return *o.GenericProperty
}

// GetGenericPropertyOk returns a tuple with the GenericProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetGenericPropertyOk() (*ProductconfiguratorpropertyGenericProperty, bool) {
	if o == nil || isNil(o.GenericProperty) {
    return nil, false
	}
	return o.GenericProperty, true
}

// HasGenericProperty returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasGenericProperty() bool {
	if o != nil && !isNil(o.GenericProperty) {
		return true
	}

	return false
}

// SetGenericProperty gets a reference to the given ProductconfiguratorpropertyGenericProperty and assigns it to the GenericProperty field.
func (o *ProductconfiguratorpropertyCreateRequest) SetGenericProperty(v ProductconfiguratorpropertyGenericProperty) {
	o.GenericProperty = &v
}

// GetPriceProperty returns the PriceProperty field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetPriceProperty() ProductconfiguratorpropertyPriceProperty {
	if o == nil || isNil(o.PriceProperty) {
		var ret ProductconfiguratorpropertyPriceProperty
		return ret
	}
	return *o.PriceProperty
}

// GetPricePropertyOk returns a tuple with the PriceProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetPricePropertyOk() (*ProductconfiguratorpropertyPriceProperty, bool) {
	if o == nil || isNil(o.PriceProperty) {
    return nil, false
	}
	return o.PriceProperty, true
}

// HasPriceProperty returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasPriceProperty() bool {
	if o != nil && !isNil(o.PriceProperty) {
		return true
	}

	return false
}

// SetPriceProperty gets a reference to the given ProductconfiguratorpropertyPriceProperty and assigns it to the PriceProperty field.
func (o *ProductconfiguratorpropertyCreateRequest) SetPriceProperty(v ProductconfiguratorpropertyPriceProperty) {
	o.PriceProperty = &v
}

// GetWeightProperty returns the WeightProperty field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyCreateRequest) GetWeightProperty() ProductconfiguratorpropertyWeightProperty {
	if o == nil || isNil(o.WeightProperty) {
		var ret ProductconfiguratorpropertyWeightProperty
		return ret
	}
	return *o.WeightProperty
}

// GetWeightPropertyOk returns a tuple with the WeightProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyCreateRequest) GetWeightPropertyOk() (*ProductconfiguratorpropertyWeightProperty, bool) {
	if o == nil || isNil(o.WeightProperty) {
    return nil, false
	}
	return o.WeightProperty, true
}

// HasWeightProperty returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyCreateRequest) HasWeightProperty() bool {
	if o != nil && !isNil(o.WeightProperty) {
		return true
	}

	return false
}

// SetWeightProperty gets a reference to the given ProductconfiguratorpropertyWeightProperty and assigns it to the WeightProperty field.
func (o *ProductconfiguratorpropertyCreateRequest) SetWeightProperty(v ProductconfiguratorpropertyWeightProperty) {
	o.WeightProperty = &v
}

func (o ProductconfiguratorpropertyCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !isNil(o.MatrixId) {
		toSerialize["matrixId"] = o.MatrixId
	}
	if !isNil(o.StepIdToOptionId) {
		toSerialize["stepIdToOptionId"] = o.StepIdToOptionId
	}
	if !isNil(o.GenericProperty) {
		toSerialize["genericProperty"] = o.GenericProperty
	}
	if !isNil(o.PriceProperty) {
		toSerialize["priceProperty"] = o.PriceProperty
	}
	if !isNil(o.WeightProperty) {
		toSerialize["weightProperty"] = o.WeightProperty
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratorpropertyCreateRequest struct {
	value *ProductconfiguratorpropertyCreateRequest
	isSet bool
}

func (v NullableProductconfiguratorpropertyCreateRequest) Get() *ProductconfiguratorpropertyCreateRequest {
	return v.value
}

func (v *NullableProductconfiguratorpropertyCreateRequest) Set(val *ProductconfiguratorpropertyCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratorpropertyCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratorpropertyCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratorpropertyCreateRequest(val *ProductconfiguratorpropertyCreateRequest) *NullableProductconfiguratorpropertyCreateRequest {
	return &NullableProductconfiguratorpropertyCreateRequest{value: val, isSet: true}
}

func (v NullableProductconfiguratorpropertyCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratorpropertyCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


