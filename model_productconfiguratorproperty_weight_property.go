/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductconfiguratorpropertyWeightProperty struct for ProductconfiguratorpropertyWeightProperty
type ProductconfiguratorpropertyWeightProperty struct {
	Weight *float64 `json:"weight,omitempty"`
	WeightUnit *ProductconfiguratorWeightUnit `json:"weightUnit,omitempty"`
}

// NewProductconfiguratorpropertyWeightProperty instantiates a new ProductconfiguratorpropertyWeightProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratorpropertyWeightProperty() *ProductconfiguratorpropertyWeightProperty {
	this := ProductconfiguratorpropertyWeightProperty{}
	var weightUnit ProductconfiguratorWeightUnit = PRODUCTCONFIGURATORWEIGHTUNIT_UNKNOWN
	this.WeightUnit = &weightUnit
	return &this
}

// NewProductconfiguratorpropertyWeightPropertyWithDefaults instantiates a new ProductconfiguratorpropertyWeightProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratorpropertyWeightPropertyWithDefaults() *ProductconfiguratorpropertyWeightProperty {
	this := ProductconfiguratorpropertyWeightProperty{}
	var weightUnit ProductconfiguratorWeightUnit = PRODUCTCONFIGURATORWEIGHTUNIT_UNKNOWN
	this.WeightUnit = &weightUnit
	return &this
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyWeightProperty) GetWeight() float64 {
	if o == nil || isNil(o.Weight) {
		var ret float64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyWeightProperty) GetWeightOk() (*float64, bool) {
	if o == nil || isNil(o.Weight) {
    return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyWeightProperty) HasWeight() bool {
	if o != nil && !isNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float64 and assigns it to the Weight field.
func (o *ProductconfiguratorpropertyWeightProperty) SetWeight(v float64) {
	o.Weight = &v
}

// GetWeightUnit returns the WeightUnit field value if set, zero value otherwise.
func (o *ProductconfiguratorpropertyWeightProperty) GetWeightUnit() ProductconfiguratorWeightUnit {
	if o == nil || isNil(o.WeightUnit) {
		var ret ProductconfiguratorWeightUnit
		return ret
	}
	return *o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorpropertyWeightProperty) GetWeightUnitOk() (*ProductconfiguratorWeightUnit, bool) {
	if o == nil || isNil(o.WeightUnit) {
    return nil, false
	}
	return o.WeightUnit, true
}

// HasWeightUnit returns a boolean if a field has been set.
func (o *ProductconfiguratorpropertyWeightProperty) HasWeightUnit() bool {
	if o != nil && !isNil(o.WeightUnit) {
		return true
	}

	return false
}

// SetWeightUnit gets a reference to the given ProductconfiguratorWeightUnit and assigns it to the WeightUnit field.
func (o *ProductconfiguratorpropertyWeightProperty) SetWeightUnit(v ProductconfiguratorWeightUnit) {
	o.WeightUnit = &v
}

func (o ProductconfiguratorpropertyWeightProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	if !isNil(o.WeightUnit) {
		toSerialize["weightUnit"] = o.WeightUnit
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratorpropertyWeightProperty struct {
	value *ProductconfiguratorpropertyWeightProperty
	isSet bool
}

func (v NullableProductconfiguratorpropertyWeightProperty) Get() *ProductconfiguratorpropertyWeightProperty {
	return v.value
}

func (v *NullableProductconfiguratorpropertyWeightProperty) Set(val *ProductconfiguratorpropertyWeightProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratorpropertyWeightProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratorpropertyWeightProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratorpropertyWeightProperty(val *ProductconfiguratorpropertyWeightProperty) *NullableProductconfiguratorpropertyWeightProperty {
	return &NullableProductconfiguratorpropertyWeightProperty{value: val, isSet: true}
}

func (v NullableProductconfiguratorpropertyWeightProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratorpropertyWeightProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


