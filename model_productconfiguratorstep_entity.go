/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_configurator

import (
	"encoding/json"
	"time"
)

// ProductconfiguratorstepEntity struct for ProductconfiguratorstepEntity
type ProductconfiguratorstepEntity struct {
	Id *string `json:"id,omitempty"`
	Grn *string `json:"grn,omitempty"`
	Label *LocalisationLocalizedText `json:"label,omitempty"`
	Description *LocalisationLocalizedText `json:"description,omitempty"`
	SubjectToStepId *string `json:"subjectToStepId,omitempty"`
	Position *string `json:"position,omitempty"`
	IsRequired *bool `json:"isRequired,omitempty"`
	Options []ProductconfiguratoroptionEntity `json:"options,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewProductconfiguratorstepEntity instantiates a new ProductconfiguratorstepEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratorstepEntity() *ProductconfiguratorstepEntity {
	this := ProductconfiguratorstepEntity{}
	return &this
}

// NewProductconfiguratorstepEntityWithDefaults instantiates a new ProductconfiguratorstepEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratorstepEntityWithDefaults() *ProductconfiguratorstepEntity {
	this := ProductconfiguratorstepEntity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ProductconfiguratorstepEntity) SetId(v string) {
	o.Id = &v
}

// GetGrn returns the Grn field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetGrn() string {
	if o == nil || isNil(o.Grn) {
		var ret string
		return ret
	}
	return *o.Grn
}

// GetGrnOk returns a tuple with the Grn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetGrnOk() (*string, bool) {
	if o == nil || isNil(o.Grn) {
    return nil, false
	}
	return o.Grn, true
}

// HasGrn returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasGrn() bool {
	if o != nil && !isNil(o.Grn) {
		return true
	}

	return false
}

// SetGrn gets a reference to the given string and assigns it to the Grn field.
func (o *ProductconfiguratorstepEntity) SetGrn(v string) {
	o.Grn = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetLabel() LocalisationLocalizedText {
	if o == nil || isNil(o.Label) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetLabelOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given LocalisationLocalizedText and assigns it to the Label field.
func (o *ProductconfiguratorstepEntity) SetLabel(v LocalisationLocalizedText) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetDescription() LocalisationLocalizedText {
	if o == nil || isNil(o.Description) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetDescriptionOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given LocalisationLocalizedText and assigns it to the Description field.
func (o *ProductconfiguratorstepEntity) SetDescription(v LocalisationLocalizedText) {
	o.Description = &v
}

// GetSubjectToStepId returns the SubjectToStepId field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetSubjectToStepId() string {
	if o == nil || isNil(o.SubjectToStepId) {
		var ret string
		return ret
	}
	return *o.SubjectToStepId
}

// GetSubjectToStepIdOk returns a tuple with the SubjectToStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetSubjectToStepIdOk() (*string, bool) {
	if o == nil || isNil(o.SubjectToStepId) {
    return nil, false
	}
	return o.SubjectToStepId, true
}

// HasSubjectToStepId returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasSubjectToStepId() bool {
	if o != nil && !isNil(o.SubjectToStepId) {
		return true
	}

	return false
}

// SetSubjectToStepId gets a reference to the given string and assigns it to the SubjectToStepId field.
func (o *ProductconfiguratorstepEntity) SetSubjectToStepId(v string) {
	o.SubjectToStepId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetPosition() string {
	if o == nil || isNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetPositionOk() (*string, bool) {
	if o == nil || isNil(o.Position) {
    return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasPosition() bool {
	if o != nil && !isNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *ProductconfiguratorstepEntity) SetPosition(v string) {
	o.Position = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetIsRequired() bool {
	if o == nil || isNil(o.IsRequired) {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetIsRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.IsRequired) {
    return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasIsRequired() bool {
	if o != nil && !isNil(o.IsRequired) {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *ProductconfiguratorstepEntity) SetIsRequired(v bool) {
	o.IsRequired = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetOptions() []ProductconfiguratoroptionEntity {
	if o == nil || isNil(o.Options) {
		var ret []ProductconfiguratoroptionEntity
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetOptionsOk() ([]ProductconfiguratoroptionEntity, bool) {
	if o == nil || isNil(o.Options) {
    return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasOptions() bool {
	if o != nil && !isNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ProductconfiguratoroptionEntity and assigns it to the Options field.
func (o *ProductconfiguratorstepEntity) SetOptions(v []ProductconfiguratoroptionEntity) {
	o.Options = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetCreatedAt() time.Time {
	if o == nil || isNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ProductconfiguratorstepEntity) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ProductconfiguratorstepEntity) GetUpdatedAt() time.Time {
	if o == nil || isNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepEntity) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.UpdatedAt) {
    return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ProductconfiguratorstepEntity) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ProductconfiguratorstepEntity) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o ProductconfiguratorstepEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Grn) {
		toSerialize["grn"] = o.Grn
	}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.SubjectToStepId) {
		toSerialize["subjectToStepId"] = o.SubjectToStepId
	}
	if !isNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !isNil(o.IsRequired) {
		toSerialize["isRequired"] = o.IsRequired
	}
	if !isNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !isNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratorstepEntity struct {
	value *ProductconfiguratorstepEntity
	isSet bool
}

func (v NullableProductconfiguratorstepEntity) Get() *ProductconfiguratorstepEntity {
	return v.value
}

func (v *NullableProductconfiguratorstepEntity) Set(val *ProductconfiguratorstepEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratorstepEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratorstepEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratorstepEntity(val *ProductconfiguratorstepEntity) *NullableProductconfiguratorstepEntity {
	return &NullableProductconfiguratorstepEntity{value: val, isSet: true}
}

func (v NullableProductconfiguratorstepEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratorstepEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


