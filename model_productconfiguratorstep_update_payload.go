/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProductconfiguratorstepUpdatePayload struct for ProductconfiguratorstepUpdatePayload
type ProductconfiguratorstepUpdatePayload struct {
	Label *LocalisationLocalizedText `json:"label,omitempty"`
	Description *LocalisationLocalizedText `json:"description,omitempty"`
	Position *string `json:"position,omitempty"`
	IsRequired *bool `json:"isRequired,omitempty"`
	SubjectToStepId *string `json:"subjectToStepId,omitempty"`
}

// NewProductconfiguratorstepUpdatePayload instantiates a new ProductconfiguratorstepUpdatePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductconfiguratorstepUpdatePayload() *ProductconfiguratorstepUpdatePayload {
	this := ProductconfiguratorstepUpdatePayload{}
	return &this
}

// NewProductconfiguratorstepUpdatePayloadWithDefaults instantiates a new ProductconfiguratorstepUpdatePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductconfiguratorstepUpdatePayloadWithDefaults() *ProductconfiguratorstepUpdatePayload {
	this := ProductconfiguratorstepUpdatePayload{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ProductconfiguratorstepUpdatePayload) GetLabel() LocalisationLocalizedText {
	if o == nil || isNil(o.Label) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepUpdatePayload) GetLabelOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Label) {
    return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ProductconfiguratorstepUpdatePayload) HasLabel() bool {
	if o != nil && !isNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given LocalisationLocalizedText and assigns it to the Label field.
func (o *ProductconfiguratorstepUpdatePayload) SetLabel(v LocalisationLocalizedText) {
	o.Label = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProductconfiguratorstepUpdatePayload) GetDescription() LocalisationLocalizedText {
	if o == nil || isNil(o.Description) {
		var ret LocalisationLocalizedText
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepUpdatePayload) GetDescriptionOk() (*LocalisationLocalizedText, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProductconfiguratorstepUpdatePayload) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given LocalisationLocalizedText and assigns it to the Description field.
func (o *ProductconfiguratorstepUpdatePayload) SetDescription(v LocalisationLocalizedText) {
	o.Description = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ProductconfiguratorstepUpdatePayload) GetPosition() string {
	if o == nil || isNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepUpdatePayload) GetPositionOk() (*string, bool) {
	if o == nil || isNil(o.Position) {
    return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ProductconfiguratorstepUpdatePayload) HasPosition() bool {
	if o != nil && !isNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *ProductconfiguratorstepUpdatePayload) SetPosition(v string) {
	o.Position = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *ProductconfiguratorstepUpdatePayload) GetIsRequired() bool {
	if o == nil || isNil(o.IsRequired) {
		var ret bool
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepUpdatePayload) GetIsRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.IsRequired) {
    return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *ProductconfiguratorstepUpdatePayload) HasIsRequired() bool {
	if o != nil && !isNil(o.IsRequired) {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given bool and assigns it to the IsRequired field.
func (o *ProductconfiguratorstepUpdatePayload) SetIsRequired(v bool) {
	o.IsRequired = &v
}

// GetSubjectToStepId returns the SubjectToStepId field value if set, zero value otherwise.
func (o *ProductconfiguratorstepUpdatePayload) GetSubjectToStepId() string {
	if o == nil || isNil(o.SubjectToStepId) {
		var ret string
		return ret
	}
	return *o.SubjectToStepId
}

// GetSubjectToStepIdOk returns a tuple with the SubjectToStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductconfiguratorstepUpdatePayload) GetSubjectToStepIdOk() (*string, bool) {
	if o == nil || isNil(o.SubjectToStepId) {
    return nil, false
	}
	return o.SubjectToStepId, true
}

// HasSubjectToStepId returns a boolean if a field has been set.
func (o *ProductconfiguratorstepUpdatePayload) HasSubjectToStepId() bool {
	if o != nil && !isNil(o.SubjectToStepId) {
		return true
	}

	return false
}

// SetSubjectToStepId gets a reference to the given string and assigns it to the SubjectToStepId field.
func (o *ProductconfiguratorstepUpdatePayload) SetSubjectToStepId(v string) {
	o.SubjectToStepId = &v
}

func (o ProductconfiguratorstepUpdatePayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !isNil(o.IsRequired) {
		toSerialize["isRequired"] = o.IsRequired
	}
	if !isNil(o.SubjectToStepId) {
		toSerialize["subjectToStepId"] = o.SubjectToStepId
	}
	return json.Marshal(toSerialize)
}

type NullableProductconfiguratorstepUpdatePayload struct {
	value *ProductconfiguratorstepUpdatePayload
	isSet bool
}

func (v NullableProductconfiguratorstepUpdatePayload) Get() *ProductconfiguratorstepUpdatePayload {
	return v.value
}

func (v *NullableProductconfiguratorstepUpdatePayload) Set(val *ProductconfiguratorstepUpdatePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableProductconfiguratorstepUpdatePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableProductconfiguratorstepUpdatePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductconfiguratorstepUpdatePayload(val *ProductconfiguratorstepUpdatePayload) *NullableProductconfiguratorstepUpdatePayload {
	return &NullableProductconfiguratorstepUpdatePayload{value: val, isSet: true}
}

func (v NullableProductconfiguratorstepUpdatePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductconfiguratorstepUpdatePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


