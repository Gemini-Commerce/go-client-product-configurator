/*
Product Configurator Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PropertyUpdatePayloadWeightProperty struct for PropertyUpdatePayloadWeightProperty
type PropertyUpdatePayloadWeightProperty struct {
	Weight *float64 `json:"weight,omitempty"`
}

// NewPropertyUpdatePayloadWeightProperty instantiates a new PropertyUpdatePayloadWeightProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyUpdatePayloadWeightProperty() *PropertyUpdatePayloadWeightProperty {
	this := PropertyUpdatePayloadWeightProperty{}
	return &this
}

// NewPropertyUpdatePayloadWeightPropertyWithDefaults instantiates a new PropertyUpdatePayloadWeightProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyUpdatePayloadWeightPropertyWithDefaults() *PropertyUpdatePayloadWeightProperty {
	this := PropertyUpdatePayloadWeightProperty{}
	return &this
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *PropertyUpdatePayloadWeightProperty) GetWeight() float64 {
	if o == nil || isNil(o.Weight) {
		var ret float64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyUpdatePayloadWeightProperty) GetWeightOk() (*float64, bool) {
	if o == nil || isNil(o.Weight) {
    return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *PropertyUpdatePayloadWeightProperty) HasWeight() bool {
	if o != nil && !isNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given float64 and assigns it to the Weight field.
func (o *PropertyUpdatePayloadWeightProperty) SetWeight(v float64) {
	o.Weight = &v
}

func (o PropertyUpdatePayloadWeightProperty) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullablePropertyUpdatePayloadWeightProperty struct {
	value *PropertyUpdatePayloadWeightProperty
	isSet bool
}

func (v NullablePropertyUpdatePayloadWeightProperty) Get() *PropertyUpdatePayloadWeightProperty {
	return v.value
}

func (v *NullablePropertyUpdatePayloadWeightProperty) Set(val *PropertyUpdatePayloadWeightProperty) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyUpdatePayloadWeightProperty) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyUpdatePayloadWeightProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyUpdatePayloadWeightProperty(val *PropertyUpdatePayloadWeightProperty) *NullablePropertyUpdatePayloadWeightProperty {
	return &NullablePropertyUpdatePayloadWeightProperty{value: val, isSet: true}
}

func (v NullablePropertyUpdatePayloadWeightProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyUpdatePayloadWeightProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


